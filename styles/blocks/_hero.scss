.hero {
  display: flex;
  flex-direction: column;
  row-gap: var(--section-padding-y);
  // получается он переопределил
  @include desktop {
    row-gap: 60px;
  }

  &__main {
    display: flex;
    justify-content: space-between;
    align-items: start;
    column-gap: 30px;

    @include mobile {
      flex-direction: column;
      // делает так, что флекс-контейнер выстраивает дочерние элементы
      // в колонку (сверху вниз) вместо стандартного ряда (слева направо).
    }
  }
  &__body {
    display: flex;
    flex-direction: column;
    max-width: 531px;
    align-items: start;
    row-gap: 35px; // задает вертикальные отступы

    @include mobile {
      display: contents;
      // делает так, что сам элемент исчезает,
      // но его дети остаются и ведут себя, как будто родителя нет.
      // то есть бы убираем body
      // но стили для элементов body остаются
    }
  }
  &__title {
    @include mobile {
      order: -2;
      margin-bottom: 10px;
    }
  }

  &__description {
    font-size: 20px;
    line-height: 1.4;
    @include mobile {
      margin-bottom: 40px;
    }
  }

  &__button {
    @include mobile {
      width: 100%;
      max-width: 390px;
      margin-inline: auto; //один из спосоюов оцентрировать элемент по середине
    }
  }

  &__partners {
    &-list {
      display: flex;
      justify-content: space-between;
      column-gap: 37px; //горизонтальное расстояние

      @include tablet {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        row-gap: 20px; // задает вертикальные отступы
      }
    }
    @include mobile-s {
      --heroPartnersWidthOffsetX: 60px;

      column-gap: 0;
      //calc() — это функция в CSS, которая позволяет делать математические расчёты
      //для значений ширины, высоты, отступов и других свойств.
      width: calc(100vw + var(--heroPartnersWidthOffsetX) * 2);
      margin-left: calc(
        (var(--heroPartnersWidthOffsetX) + var(--container-padding-x)) * -1
      );
    }

    &-item {
      @include tablet {
        display: flex;
        justify-content: center;
      }
      @include mobile-s {
        justify-content: start;

        &:nth-child(-n + 3) {
          padding-left: 10px;
          justify-content: end;
        }
      }
    }
    &-image {
      //для того что бы обесветить элемент
      filter: grayscale(1);
    }
  }

  &__image {
    @include tablet {
      max-width: 40%;
      //что бы изображение сохроняло свои
      //пропорции нужно написать  height: auto;
      height: auto;
    }

    @include mobile {
      //Если у элемента order меньше, чем у других (например, -2), он окажется
      //выше в порядке, даже если в коде он идёт позже.
      order: -1;
      max-width: 100%;
      width: 100%;
      margin-bottom: 20px;
    }
  }
}
